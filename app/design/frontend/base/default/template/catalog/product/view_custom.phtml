<?php 
 $baseurl = Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_WEB);
 $skin_url = Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_SKIN); 
?>
<style>
#main_container{
  //margin-left:300px;
  //margin-top:200px;
  position:relative;
}

#toaddtext{
padding:2px;
}

.mytext{
height:30px;
}

.addtxt {
  background:url('<?php echo $skin_url?>frontend/default/default/images/button1.png') no-repeat;
  width:113px;
  height:30px;
}

.uploads{ 
    height: 30px;
    margin-left: 100px;
    width: 113px; 
    background:url('<?php echo $skin_url?>frontend/default/default/images/button3.png') no-repeat;
}

.fileUpload{
 height: 30px;
}

</style>
<script type="text/javascript">

jQuery(document).ready(function(){

var p = jQuery('.price').html();
jQuery('#oldprice').val(p);
jQuery('#oldproduct').val(jQuery("input[name=product]").val());

jQuery('#product-essential').append('<div id="product-options-wrapper" class="product-options"></div>');

document.getElementById('userfiles').addEventListener('change', function(e) {
   var url='<?print $baseurl; ?>customproduct/index/upload';
    var file = this.files[0];
    var xhr = new XMLHttpRequest();
    xhr.file = file; // not necessary if you create scopes like this
    xhr.addEventListener('progress', function(e) {
        var done = e.position || e.loaded, total = e.totalSize || e.total;
        console.log('xhr progress: ' + (Math.floor(done/total*1000)/10) + '%');
    }, false);
    if ( xhr.upload ) {
        xhr.upload.onprogress = function(e) {
            var done = e.position || e.loaded, total = e.totalSize || e.total;
            console.log('xhr.upload progress: ' + done + ' / ' + total + ' = ' + (Math.floor(done/total*1000)/10) + '%');
        };
    }
    xhr.onreadystatechange = function(e) {
        if ( 4 == this.readyState ) {
	    this.response = this.response || this.responseText;
	  jQuery('#page_imagePort-image').attr('src','media/finalimages/upload/'+ this.response);

            console.log(['xhr upload complete', e]);
        }
    };
    xhr.open('post', url, true);
	var formData = new FormData();
	formData.append("userfile",file);
	xhr.send(formData);
        //xhr.send(file);
}, false); 

//});

/*jQuery("input[type=file]").filestyle({ 
     image: "http://localhost/magento/skin/frontend/base/default/toajax/images/button2.png",
     imageheight : 30,
     imagewidth : 113,
     width : 200
 });
*/

jQuery.post('<?print $baseurl; ?>customproduct/index/ajaxoptions',{},function(data){
	   jQuery('#product-options-wrapper').html(data);
}); 

jQuery('#idproduct').click(function(){	
	  jQuery('#designs').hide();	
	  jQuery('#products').show();
});	
	

 jQuery('#iddesign').click(function(){
        
        jQuery('#page_imagePort-image').attr('src','<?php echo $skin_url?>frontend/default/default/images/bgimage.png');
	jQuery('#page_imagePort1-image').attr('src','<?php echo $skin_url?>frontend/default/default/images/textimage.png');

	jQuery('#designs').show();	
	jQuery('#products').hide();	


Uize.module ({
	required:[
		'Uize.Widget.Page',		
		'Uize.Node',
		'Uize.Widget.ImagePort',
		'Uize.Widget.Bar.Slider.xSkin',
		'Uize.Widget.Resizer.Marquee'
	],
	builder:function () {
		/*** create the example page widget ***/	

			var page = window.page = Uize.Widget.Page ();

		/*** add the image port child widget ***/
			var imagePort = page.addChild (
				'imagePort',
				Uize.Widget.ImagePort,
				{
					sizingLowerBound:'0',
					sizingUpperBound:'fill',
					sizingValue:.5,
					alignX:.5,
					alignY:.5
				}
			);


	var imagePort1 = page.addChild (
				'imagePort1',
				Uize.Widget.ImagePort,
				{
					sizingLowerBound:'0',
					sizingUpperBound:'fill',
					sizingValue:.5,
					alignX:.5,
					alignY:.5
				}
			);

		/*** code to update the image port instance based on user input values ***/
			function updateImagePortSettings () {
				imagePort.set ({
					alignX:0.5,
					alignY:0.5,
					sizingUpperBound:'fill',
					sizingLowerBound:'0',
					sizingValue:'1'
				});
			}

			function updateImagePortSettings1 () {
				imagePort1.set ({
					alignX:0.5,
					alignY:0.5,
					sizingUpperBound:'fill',
					sizingLowerBound:'0',
					sizingValue:'1'
				});
			}

		/*** common values shared by alignX, alignY, and sizingValue sliders ***/
			/*Uize.Widget.Bar.Slider.set ({
				value:.5,
				fullTintColor:'#9aa',
				fullTintLevel:50,
				emptyTintColor:'#9aa',
				emptyTintLevel:50,
				borderThickness:3,
				borderTintColor:'#455',
				borderTintLevel:50,
				increments:0,
				knobSize:28,
				built:false
			});*/

		/*** add the alignX slider child widget ***/
			/*var alignXSlider = page.addChild (
				'alignXSlider',
				Uize.Widget.Bar.Slider,
				{
					minValue:0,
					maxValue:1,
					orientation:'horizontal'
				}
			);*/
			/*alignXSlider.wire ('Changed.value',updateImagePortSettings);*/

		/*** add the alignY slider child widget ***/
			/*var alignYSlider = page.addChild (
				'alignYSlider',
				Uize.Widget.Bar.Slider,
				{
					minValue:1,
					maxValue:0,
					orientation:'vertical'
				}
			);
			alignYSlider.wire ('Changed.value',updateImagePortSettings);*/

		/*** add the sizingValue slider child widget ***/
			/*var sizingValueSlider = page.addChild (
				'sizingValueSlider',
				Uize.Widget.Bar.Slider,
				{
					fullTintColor:'#fff',
					fullTintLevel:70,
					minValue:0,
					maxValue:3,
					value:1,
					orientation:'vertical'
				}
			);
			sizingValueSlider.wire ('Changed.value',updateImagePortSettings);*/

		/*** add the marquee child widget ***/
			function updateImagePortPos () {
				imagePort.setNodeStyle ('',marquee.getCoords());
				imagePort.updateUi ();
			}

			function updateImagePortPos1 () {
				imagePort1.setNodeStyle ('',marquee1.getCoords());
				imagePort1.updateUi ();
			}

			
			
			var marquee = page.addChild (
				'marquee',
				Uize.Widget.Resizer.Marquee,
				{
					constrain:true,
					minWidth:20,
					minHeight:20,
					built:false
				}
			);
			marquee.wire ('Position Changed',updateImagePortPos);

			var marquee1 = page.addChild (
				'marquee1',
				Uize.Widget.Resizer.Marquee,
				{
					constrain:true,
					minWidth:20,
					minHeight:20,
					built:false
				}
			);
			marquee1.wire ('Position Changed',updateImagePortPos1);
			

		/*** initialize the ImagePort instance ***/
			updateImagePortSettings ();
			updateImagePortSettings1 ();
			updateImagePortPos ();
			updateImagePortPos1 ();

		/*** wire up the page widget ***/
			page.wireUi ();

		/*** watch for changes in sizing bound values ***/
			page.wireNode ('sizingUpperBound','change',updateImagePortSettings);
			page.wireNode ('sizingLowerBound','change',updateImagePortSettings1);

				
			function displayMarqueePosition () {
				page.setNodeValue ('marqueePositionLeft',marquee.get ('left'));
				page.setNodeValue ('marqueePositionTop',marquee.get ('top'));
				page.setNodeValue ('marqueePositionWidth',marquee.get ('width'));
				page.setNodeValue ('marqueePositionHeight',marquee.get ('height'));
			}

			function displayMarqueePosition1 () {
				page.setNodeValue ('marqueePositionLeftT',marquee1.get ('left'));
				page.setNodeValue ('marqueePositionTopT',marquee1.get ('top'));
				page.setNodeValue ('marqueePositionWidthT',marquee1.get ('width'));
				page.setNodeValue ('marqueePositionHeightT',marquee1.get ('height'));
			}

			marquee.wire('Position Changed',displayMarqueePosition);
			marquee1.wire('Position Changed',displayMarqueePosition1);

		/*** display marquee's initial position ***/
			displayMarqueePosition();

			displayMarqueePosition1();

	}
});


			

});


jQuery(".addtxt").click(function(){
 
var l_text = jQuery('#page-marqueePositionLeftT').val();
var t_text = jQuery('#page-marqueePositionTopT').val();
var w_text = jQuery('#page-marqueePositionWidthT').val();
var h_text = jQuery('#page-marqueePositionHeightT').val();

    var mytext=jQuery('.mytext').val();

	jQuery.post('<?print $baseurl; ?>customproduct/index/text',{'mytext':mytext,'width':w_text,'height':h_text,'left':l_text,'top':t_text},function(data){
	   jQuery('#page_imagePort1-image').attr('src',data);
	});

});

jQuery('#idproduct').click(function(){

var left =jQuery('#page-marqueePositionLeft').val();
var top = jQuery('#page-marqueePositionTop').val();
var width = jQuery('#page-marqueePositionWidth').val();
var height =jQuery('#page-marqueePositionHeight').val();

var left_text =jQuery('#page-marqueePositionLeftT').val();
var top_text = jQuery('#page-marqueePositionTopT').val();
var w_text = jQuery('#page-marqueePositionWidthT').val();
var h_text =jQuery('#page-marqueePositionHeightT').val();

var product =jQuery("input[name=product]").val();

var textimage =jQuery('#page_imagePort1-image').attr('src');
var mainimage =jQuery('#page_imagePort-image').attr('src');

jQuery('#image').attr('src',jQuery('#oldimage').val());

var image = jQuery('#image').attr('src');

//var product =jQuery("input[name=product]").val();

var oldprice = jQuery('#oldprice').val();

jQuery.post('<?print $baseurl; ?>customproduct/index/image',{'oldprice':oldprice,'image':image,'mainimage':mainimage,'product':product,'textimage':textimage,'left':left,'top':top,'width':width,'height':height,'left_text':left_text,'top_text':top_text,'w_text':w_text,'h_text':h_text},function(data){
    
    var data = JSON.parse(data);
    	

    if(data['filename']!=0){ 	
     jQuery('#image').attr('src',data['filename']); 
     var pid = data['product_id'];	   
     jQuery(".price").html('$'+data['price']);
    } else {
      jQuery('#image').attr('src',jQuery('#oldimage').val());    
      var pid = jQuery('#oldproduct').val();
      jQuery(".price").html(jQuery('#oldprice').val());
    }

    if(data['opthtml']!=0){ 	
    	jQuery('#product-options-wrapper').html(data['opthtml']);
    }
    
	
    


    
    jQuery("input[name=product]").val(pid);
   	

    var addcart = jQuery("#product_addtocart_form").attr('action');
    var addcart = addcart.split('product/');
    var addcart_url = addcart[0]+'product/'+pid+'/'
    

    var wish = jQuery(".link-wishlist").attr('href');
    var wish = wish.split('product/');
    
    
    var wish_url = wish[0]+'product/'+pid+'/'	


    var comp = jQuery(".link-compare").attr('href');
    var comp = comp.split('uenc/');
    var comp1 = comp[0].split('product/');	
    
    var comp_url = comp1[0]+'product/id/'+pid+'/uenc/'+comp[1]; 	

    /*var rv=jQuery(".no-rating a").attr('href');
    var rv = rv.trim();        
    rv.split('/review');
    var rev_url = rv[0]+'list/id/'+pid+'#review-form';*/

    jQuery("#product_addtocart_form").attr('action',addcart_url);
    
    jQuery(".link-wishlist").attr('href',wish_url);
    
    jQuery(".link-compare").attr('href',comp_url);
    
	
	

});






     
});


});




</script>

<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * Product view template
 *
 * @see Mage_Catalog_Block_Product_View
 * @see Mage_Review_Block_Product_View
 */
?>
<?php $_helper = $this->helper('catalog/output'); ?>
<?php $_product = $this->getProduct(); ?>
<script type="text/javascript">
    var optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
</script>
<div id="messages_product_view"><?php echo $this->getMessagesBlock()->getGroupedHtml() ?></div>
<div class="product-view">
<div class="product-essential">
		




    <form action="<?php echo $this->getSubmitUrl($_product) ?>" method="post" id="product_addtocart_form"<?php if($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
        <div class="no-display">
            <input type="hidden" name="product" value="<?php echo $_product->getId() ?>" />
            <input type="hidden" name="related_product" id="related-products-field" value="" />
        </div>

        <div class="product-shop">
            <div class="product-name">
                <h1><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></h1>
            </div>

            <?php if ($this->canEmailToFriend()): ?>
                <p class="email-friend"><a href="<?php echo $this->helper('catalog/product')->getEmailToFriendUrl($_product) ?>"><?php echo $this->__('Email to a Friend') ?></a></p>
            <?php endif; ?>

           



            <?php echo $this->getReviewsSummaryHtml($_product, false, true)?>
            <?php echo $this->getChildHtml('alert_urls') ?>
            <?php echo $this->getChildHtml('product_type_data') ?>
            <?php echo $this->getTierPriceHtml() ?>
            <?php echo $this->getChildHtml('extrahint') ?>

            <?php if (!$this->hasOptions()):?>
                <div class="add-to-box">
                    <?php if($_product->isSaleable()): ?>
                        <?php echo $this->getChildHtml('addtocart') ?>
                        <?php if( $this->helper('wishlist')->isAllow() || $_compareUrl=$this->helper('catalog/product_compare')->getAddUrl($_product)): ?>
                            <span class="or"><?php echo $this->__('OR') ?></span>
                        <?php endif; ?>
                    <?php endif; ?>
                    <?php echo $this->getChildHtml('addto') ?>
                </div>
                <?php echo $this->getChildHtml('extra_buttons') ?>
            <?php elseif (!$_product->isSaleable()): ?>
                <div class="add-to-box">
                    <?php echo $this->getChildHtml('addto') ?>
                </div>
            <?php endif; ?>

            <?php if ($_product->getShortDescription()):?>
                <div class="short-description">
                    <h2><?php echo $this->__('Quick Overview') ?></h2>
                    <div class="std"><?php echo $_helper->productAttribute($_product, nl2br($_product->getShortDescription()), 'short_description') ?></div>
                </div>
            <?php endif;?>


		<div id="main_container">
			<h2>Upload Image Files</h2>
			<form id="uploadfile" action="<?print $baseurl; ?>customproduct/index/upload" enctype="multipart/form-data">
				<input type="file" name="userfiles" id="userfiles" class="fileUpload" multiple>		
				<!--<input class="uploads" type="button" name="upload" id="upload">-->
			</form>
			<div id="mlist">
			</div>
			

<div id="toaddtext">
<span><input type="button" name="addtxt" class="addtxt" value="Add text"></span><span><input type="text" name="mytext" id="mytext" class="mytext"/></span>
</div>
</div>



            <?php echo $this->getChildHtml('other');?>

            <?php if ($_product->isSaleable() && $this->hasOptions()):?>
                <?php echo $this->getChildChildHtml('container1', '', true, true) ?>
            <?php endif;?>

        </div>

        <div class="product-img-box">
            <?php echo $this->getChildHtml('media') ?>
        </div>

        <div class="clearer"></div>
        <?php if ($_product->isSaleable() && $this->hasOptions()):?>
            <?php echo $this->getChildChildHtml('container2', '', true, true) ?>
        <?php endif;?>
    </form>



    <script type="text/javascript">
    //<![CDATA[
        var productAddToCartForm = new VarienForm('product_addtocart_form');
        productAddToCartForm.submit = function(button, url) {
            if (this.validator.validate()) {
                var form = this.form;
                var oldUrl = form.action;

                if (url) {
                   form.action = url;
                }
                var e = null;
                try {
                    this.form.submit();
                } catch (e) {
                }
                this.form.action = oldUrl;
                if (e) {
                    throw e;
                }

                if (button && button != 'undefined') {
                    button.disabled = true;
                }
            }
        }.bind(productAddToCartForm);

        productAddToCartForm.submitLight = function(button, url){
            if(this.validator) {
                var nv = Validation.methods;
                delete Validation.methods['required-entry'];
                delete Validation.methods['validate-one-required'];
                delete Validation.methods['validate-one-required-by-name'];
                // Remove custom datetime validators
                for (var methodName in Validation.methods) {
                    if (methodName.match(/^validate-datetime-.*/i)) {
                        delete Validation.methods[methodName];
                    }
                }

                if (this.validator.validate()) {
                    if (url) {
                        this.form.action = url;
                    }
                    this.form.submit();
                }
                Object.extend(Validation.methods, nv);
            }
        }.bind(productAddToCartForm);
    //]]>
    </script>
    </div>

    <div class="product-collateral">
<?php foreach ($this->getChildGroup('detailed_info', 'getChildHtml') as $alias => $html):?>
        <div class="box-collateral <?php echo "box-{$alias}"?>">
            <?php if ($title = $this->getChildData($alias, 'title')):?>
            <h2><?php echo $this->escapeHtml($title); ?></h2>
            <?php endif;?>
            <?php echo $html; ?>
        </div>
<?php endforeach;?>
        <?php echo $this->getChildHtml('upsell_products') ?>
        <?php echo $this->getChildHtml('product_additional_data') ?>
    </div>
</div>
